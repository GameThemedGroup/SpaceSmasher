#BlueJ class context
comment0.params=
comment0.target=void\ buildGame()
comment0.text=\r\n\ EXTENDED\ FUNCTION\ -\ initialize\ the\ game.\ Being\ called\ in\ initialize()\ function\r\n
comment1.params=
comment1.target=void\ updateGame()
comment1.text=\r\n\ EXTENDED\ FUNCTION\ -\ update\ the\ game.\ Being\ called\ in\ update()\ function\r\n
comment10.params=whichPaddle
comment10.target=void\ addBall(int)
comment10.text=\r\n\ EXTENDED\ METHOD\ -\ Method\ to\ add\ a\ ball\ to\ the\ ballSet\ and\ Spawn\ on\ the\ screen\r\n\ @param\ whichPaddle\ which\ paddle\ to\ add\ the\ ball\ to\r\n
comment11.params=numOfBlock
comment11.target=void\ setBlocksPerRow(int)
comment11.text=\r\n\ EXTENDED\ METHOD\ -\ set\ how\ many\ blocks\ to\ have\ in\ a\ row\r\n\ @param\ numOfBlock\ how\ many\ blocks\ should\ be\ in\ a\ row\r\n
comment12.params=blockType\ numOfBlock
comment12.target=void\ addBlock(java.lang.String,\ int)
comment12.text=\r\n\ EXTENDED\ METHOD\ -\ Add\ blocks\ to\ the\ game.\ There\ are\ 3\ types\ of\ block\ that\r\n\ the\ user\ can\ add\ such\ as\ Fire,\ Ice,\ or\ Normal\ block.\r\n\ @param\ blockType\ the\ type\ of\ block\ to\ add\r\n\ @param\ numOfBlock\ how\ many\ block\ of\ this\ type\r\n
comment13.params=
comment13.target=void\ revealBlockPower()
comment13.text=\r\n\ EXTENDED\ METHOD\ -\ Reveal\ the\ power\ of\ the\ block\r\n\ E.g.\ If\ the\ type\ is\ Fire,\ display\ the\ block\ as\ Fire\ block\ \r\n
comment14.params=
comment14.target=void\ initialize()
comment14.text=\r\n\ This\ method\ could\ be\ overridden\ to\ add\ extra\ features\r\n\ specific\ to\ initialization\ of\ the\ starting\ number\ of\ lives\ (lifeSet),\ the\ starting\r\n\ number\ of\ paddles\ (in\ the\ paddleSet),\ the\ number\ of\ balls\ in\ our\ simulation\ (inside\ ballSet)\r\n\ the\ number\ and\ arrangement\ of\ blocks\ on\ the\ screen\ (in\ the\ blockSet)\ and\ finally\ console\ reporting\r\n
comment15.params=
comment15.target=boolean\ areAllBlocksRemoved()
comment15.text=\r\n\ API\ utility\ method\r\n\ This\ method\ is\ responsible\ for\ determining\ if\ all\ blocks\ have\ been\ removed\ and\ we've\ \ \r\n\ met\ our\ winning\ condition\ for\ the\ game\ \r\n\ \r\n\ @return\ -\ true\ if\ all\ blocks\ have\ been\ destroyed\ on\ screen\r\n
comment16.params=
comment16.target=void\ update()
comment16.text=\r\n\ This\ method\ could\ be\ overridden\ to\ add\ extra\ features\r\n\ Specific\ to\ winning\ the\ game,\ paddle\ checks\ and\ ball\ checks\r\n
comment17.params=ball
comment17.target=void\ addToBallSetAndSpawn(SpaceSmasher.Ball)
comment17.text=\r\n\ This\ method\ adds\ the\ given\ ball\ to\ the\ ballSet\ and\ spawn\ it\ from\ the\ \r\n\ first\ paddle\ of\ the\ paddleSet\r\n\ @param\ ball\ -\ the\ ball\ to\ add\ to\ the\ ballSet\ and\ also\ spawn\ on\ screen\r\n
comment18.params=ball\ whichPaddle
comment18.target=void\ addToBallSetAndSpawn(SpaceSmasher.Ball,\ int)
comment18.text=\r\n\ This\ method\ adds\ the\ given\ ball\ to\ the\ ballSet\ and\ spawn\ it\ from\ the\ given\ paddle\r\n\ @param\ ball\ -\ the\ ball\ to\ add\ to\ the\ ballSet\ and\ also\ spawn\ on\ screen\r\n\ @param\ whichPaddle\ -\ the\ integer\ index\ specifying\ which\ paddle\ inside\ of\ the\ paddleSet\ should\ be\ used\r\n
comment19.params=
comment19.target=SpaceSmasher.Ball\ createNewBall()
comment19.text=\r\n\ \r\n\ @return\ Ball\ -\ the\ newly\ created\ ball\ for\ you\ to\ use\r\n
comment2.params=whichBall
comment2.target=void\ ballPlayBounceSound(int)
comment2.text=\r\n\ EXTENDED\ FUNCTION\ -\ inaddition\ to\ the\ API\ utility\ method,\ ballPlayBounceSound()\r\n\ @param\ whichBall\ ball\ to\ play\ the\ sound\ for\r\n
comment20.params=
comment20.target=boolean\ ballCollidedWithBlock()
comment20.text=\r\n\ @return\ true\ if\ the\ first\ ball\ in\ the\ ballSet\ collided\ with\ any\ block\r\n
comment21.params=whichBall
comment21.target=boolean\ ballCollidedWithBlock(int)
comment21.text=\r\n\ \r\n\ @param\ whichBall\ -\ an\ integer\ index\ to\ specify\ which\ ball\ out\ of\ all\ balls\ in\ the\ ballSet\r\n\ @return\ true\ if\ the\ ball\ specified\ by\ the\ parameter\ collided\ with\ any\ block\r\n
comment22.params=button
comment22.target=boolean\ isMouseButtonDown(SpaceSmasher_FunctionalAPI.MouseClicksEnum)
comment22.text=\r\n\ API\ utility\ method\r\n\ @param\ button\ -\ the\ mouse\ button\ in\ question\ \r\n\ @return\ -\ true\ if\ the\ button\ specified\ is\ being\ clicked\ on\ the\ mouse\r\n
comment23.params=
comment23.target=void\ ballReflectOffTopWall()
comment23.text=\r\n\ API\ utility\ method\ -\ Bounce\ first\ ball\ in\ the\ ballSet\ off\ the\ top\ wall\r\n
comment24.params=whichBall
comment24.target=void\ ballReflectOffTopWall(int)
comment24.text=\r\n\ API\ utility\ method\ -\ Bounce\ given\ ball\ in\ the\ ballSet\ off\ the\ top\ wall\r\n\ @param\ whichBall\ -\ the\ index\ used\ to\ select\ the\ ball\ to\ use\ out\ of\ the\ ballSet\r\n
comment25.params=
comment25.target=void\ ballReflectOffLeftWall()
comment25.text=\r\n\ API\ utility\ method\ -\ Bounce\ first\ ball\ in\ the\ ballSet\ off\ the\ left\ wall\r\n
comment26.params=whichBall
comment26.target=void\ ballReflectOffLeftWall(int)
comment26.text=\r\n\ API\ utility\ method\ -\ Bounce\ given\ ball\ in\ the\ ballSet\ off\ the\ left\ wall\r\n\ @param\ whichBall\ -\ the\ index\ used\ to\ select\ the\ ball\ to\ use\ out\ of\ the\ ballSet\r\n
comment27.params=
comment27.target=void\ ballReflectOffRightWall()
comment27.text=\r\n\ API\ utility\ method\ -\ Bounce\ first\ ball\ in\ the\ ball\ set\ off\ the\ right\ wall\r\n
comment28.params=whichBall
comment28.target=void\ ballReflectOffRightWall(int)
comment28.text=\r\n\ API\ utility\ method\ -\ Bounce\ given\ ball\ in\ the\ ballSet\ off\ the\ right\ wall\r\n\ @param\ whichBall\ -\ the\ index\ used\ to\ select\ the\ ball\ to\ use\ out\ of\ the\ ballSet\r\n
comment29.params=
comment29.target=void\ ballReflectOffBottomWall()
comment29.text=\r\n\ API\ utility\ method\ -\ Bounce\ first\ ball\ in\ the\ ballSet\ off\ the\ right\ wall\r\n
comment3.params=whichBall
comment3.target=boolean\ ballIsVisible(int)
comment3.text=\r\n\ EXTENDED\ FUNCTION\ -\ Check\ if\ the\ given\ ball\ is\ visible.\r\n\ @param\ whichBall\ the\ ball\ to\ check\r\n\ @return\ True\ if\ the\ ball\ is\ visible,\ false\ otherwise\r\n
comment30.params=whichBall
comment30.target=void\ ballReflectOffBottomWall(int)
comment30.text=\r\n\ API\ utility\ method\ -\ Bounce\ given\ ball\ in\ the\ ballSet\ off\ the\ right\ wall\r\n\ @param\ whichBall\ -\ the\ index\ used\ to\ select\ the\ ball\ to\ use\ out\ of\ the\ ballSet\r\n
comment31.params=
comment31.target=void\ ballSetToInvisible()
comment31.text=\r\n\ API\ utility\ method\r\n
comment32.params=whichBall
comment32.target=void\ ballSetToInvisible(int)
comment32.text=\r\n\ API\ utility\ method\r\n\ @param\ whichBall\ -\ the\ index\ used\ to\ select\ the\ ball\ to\ use\ out\ of\ the\ ballSet\r\n
comment33.params=state
comment33.target=void\ ballSetState(PaddleAndBallStatesEnum)
comment33.text=\r\n\ API\ utility\ method\r\n\ @param\ state\ -\ the\ state\ you\ want\ the\ ball\ to\ be\ set\ to\r\n
comment34.params=state\ whichBall
comment34.target=void\ ballSetState(PaddleAndBallStatesEnum,\ int)
comment34.text=\r\n\ API\ utility\ method\r\n\ @param\ state\ -\ the\ state\ you\ want\ the\ ball\ to\ be\ set\ to\r\n\ @param\ whichBall\ -\ the\ index\ used\ to\ select\ the\ ball\ to\ use\ out\ of\ the\ ballSet\r\n
comment35.params=
comment35.target=PaddleAndBallStatesEnum\ ballGetState()
comment35.text=\r\n\ API\ utility\ method\r\n\ @return\ -\ the\ state\ of\ the\ first\ ball\ in\ the\ ballSet\r\n
comment36.params=whichBall
comment36.target=PaddleAndBallStatesEnum\ ballGetState(int)
comment36.text=\r\n\ API\ utility\ method\r\n\ @param\ whichBall\ -\ the\ index\ used\ to\ select\ the\ ball\ to\ use\ out\ of\ the\ ballSet\r\n\ @return\ -\ the\ state\ of\ the\ ball\ for\ use\ with\ the\ Space\ Smasher\ CS1\ Functional\ API\r\n
comment37.params=
comment37.target=PaddleAndBallStatesEnum\ paddleGetState()
comment37.text=\r\n\ API\ utility\ method\r\n\ @return\ -\ the\ state\ of\ the\ first\ paddle\ in\ the\ paddleSet\r\n
comment38.params=whichPaddle
comment38.target=PaddleAndBallStatesEnum\ paddleGetState(int)
comment38.text=\r\n\ API\ utility\ method\r\n\ @param\ whichPaddle\ -\ the\ index\ used\ to\ select\ the\ paddle\ to\ use\ out\ of\ the\ paddleSet\r\n\ @return\ -\ the\ state\ of\ the\ paddle\ specified\ by\ the\ parameter,\ for\ use\ with\ the\ mid-level\ Space\ Smasher\ CS1\ Functional\ API\r\n
comment39.params=input
comment39.target=SpaceSmasher.Ball.BallType\ toBallState(PaddleAndBallStatesEnum)
comment39.text=\r\n\ API\ utility\ method\ -\ functional\ wrapper\r\n\ @param\ input\ -\ the\ state\ for\ use\ with\ the\ mid-level\ SpaceSmasher\ CS1\ Functional\ API\ wrapper\r\n\ @return\ -\ the\ state\ for\ use\ with\ the\ top-level\ SpaceSmasher\ API\r\n
comment4.params=
comment4.target=boolean\ isMouseLeftClicked()
comment4.text=\r\n\ EXTENDED\ FUNCTION\ -\ Check\ if\ user\ pressed\ on\ the\ left\ button\ of\ the\ mouse\r\n\ @return\ True\ if\ the\ mouse\ left\ button\ is\ pressed,\ False\ otherwise\r\n
comment40.params=input
comment40.target=PaddleAndBallStatesEnum\ paddleStateTranslate(SpaceSmasher.Paddle.PaddleState)
comment40.text=\r\n\ API\ utility\ method\ -\ functional\ wrapper\r\n\ @param\ input\ -\ the\ state\ for\ use\ with\ the\ top-level\ SpaceSmasher\ API\r\n\ @return\ -\ the\ state\ for\ use\ with\ the\ mid-level\ SpaceSmasher\ CS1\ Functional\ API\ wrapper\r\n
comment41.params=whichBall
comment41.target=Engine.World.BoundCollidedStatus\ getBallAndWallCollisionStatus(int)
comment41.text=\r\n\ API\ utility\ method\r\n\ @param\ whichBall\ -\ the\ index\ used\ to\ select\ the\ ball\ to\ use\ out\ of\ the\ ballSet\r\n\ @return\ -\ the\ status\ of\ the\ ball\ for\ use\ with\ the\ top-level\ Space\ Smasher\ API\r\n
comment42.params=
comment42.target=Engine.World.BoundCollidedStatus\ getBallAndWallCollisionStatus()
comment42.text=\r\n\ API\ utility\ method\ \r\n\ @return\ -\ the\ collision\ status\ with\ respect\ to\ walls\ for\ the\ first\ ball\ in\ the\ ballSet\r\n
comment43.params=
comment43.target=SpaceSmasher_FunctionalAPI.WallsEnum\ getCollidedWall()
comment43.text=\r\n\ API\ utility\ method\r\n\ @return\ -\ the\ wall\ that\ collided\ with\ the\ first\ ball\ in\ the\ ballSet\r\n
comment44.params=whichBall
comment44.target=SpaceSmasher_FunctionalAPI.WallsEnum\ getCollidedWall(int)
comment44.text=\r\n\ API\ utility\ method\r\n\ @param\ whichBall\ -\ the\ index\ used\ to\ select\ the\ ball\ to\ use\ out\ of\ the\ ballSet\r\n\ @return\ -\ the\ wall\ that\ was\ collided\ with,\ for\ use\ with\ the\ mid-level\ Space\ Smasher\ CS1\ Functional\ API\r\n
comment45.params=input
comment45.target=SpaceSmasher_FunctionalAPI.WallsEnum\ toWallsEnum(Engine.World.BoundCollidedStatus)
comment45.text=\r\n\ API\ utility\ method\ -\ functional\ wrapper\r\n\ @param\ input\ -\ the\ status\ for\ use\ with\ the\ top-level\ SpaceSmasher\ API\r\n\ @return\ -\ the\ status\ for\ use\ with\ the\ SpaceSmasher\ CS1\ Functional\ API\ wrapper\r\n
comment46.params=
comment46.target=void\ loseALife()
comment46.text=\r\n\ API\ utility\ method\r\n
comment47.params=
comment47.target=void\ lostGameCheck()
comment47.text=\r\n\ API\ utility\ method\r\n
comment48.params=
comment48.target=boolean\ isMouseOnScreen()
comment48.text=\r\n\ API\ utility\ method\r\n\ @return\ -\ true\ if\ the\ mouse\ is\ attached\ to\ the\ computer\ and\ usable\ in\ our\ game\r\n
comment49.params=
comment49.target=float\ getMouseXCoordinate()
comment49.text=\r\n\ API\ utility\ method\r\n\ @return\ -\ the\ x\ position\ of\ the\ mouse\ cursor\r\n
comment5.params=whichBall
comment5.target=void\ handleBlockBallCollision(int)
comment5.text=\r\n\ EXTENDED\ METHOD\ -\ remove\ only\ the\ block\ that\ is\ hit\ by\ the\ ball\r\n\ @param\ whichBall\ the\ ball\ to\ handle\ for\r\n
comment50.params=
comment50.target=float\ getMouseYCoordinate()
comment50.text=\r\n\ API\ utility\ method\r\n\ @return\ -\ the\ y\ position\ of\ the\ mouse\ cursor\r\n
comment51.params=x
comment51.target=void\ paddleSetCenterX(float)
comment51.text=\r\n\ API\ utility\ method\r\n\ @param\ x\ -\ the\ x\ value\ that\ will\ be\ assigned\ to\ the\ first\ paddle\ in\ the\ paddleSet\ \r\n
comment52.params=x\ whichPaddle
comment52.target=void\ paddleSetCenterX(float,\ int)
comment52.text=\r\n\ API\ utility\ method\r\n\ @param\ x\ -\ the\ x\ value\ that\ will\ be\ assigned\ to\ the\ first\ paddle\ in\ the\ paddleSet\ \r\n\ @param\ whichPaddle\ -\ the\ index\ used\ to\ select\ the\ paddle\ to\ use\ out\ of\ the\ paddleSet\r\n
comment53.params=
comment53.target=boolean\ ballCollidedWithPaddle()
comment53.text=\r\n\ API\ utility\ method\r\n\ @return\ -\ true\ if\ the\ first\ ball\ in\ the\ ballSet\ collided\ with\ the\ first\ paddle\ in\ the\ paddleSet\r\n
comment54.params=whichBall\ whichPaddle
comment54.target=boolean\ ballCollidedWithPaddle(int,\ int)
comment54.text=\r\n\ API\ utility\ method\r\n\ @param\ whichBall\ -\ an\ index\ to\ select\ the\ ball\ to\ use\ out\ of\ the\ ballSet\r\n\ @param\ whichPaddle\ -\ an\ index\ to\ select\ the\ paddle\ to\ use\ out\ of\ the\ paddleSet\r\n\ @return\ -\ true\ if\ the\ ball\ specified\ collided\ with\ the\ paddle\ specified\r\n
comment55.params=
comment55.target=void\ ballReflectOffPaddle()
comment55.text=\r\n\ API\ utility\ method\r\n\ Reflects\ the\ first\ ball\ in\ the\ ballSet\ about\ the\ first\ paddle\ in\ the\ paddleSet\r\n
comment56.params=whichBall\ whichPaddle
comment56.target=void\ ballReflectOffPaddle(int,\ int)
comment56.text=\r\n\ API\ utility\ method\r\n\ @param\ whichBall\ -\ an\ index\ to\ select\ the\ ball\ to\ use\ out\ of\ the\ ballSet\r\n\ @param\ whichPaddle\ -\ an\ index\ to\ select\ the\ paddle\ to\ use\ out\ of\ the\ paddleSet\r\n
comment57.params=
comment57.target=void\ ballPlayBounceSound()
comment57.text=\r\n\ API\ utility\ method\r\n
comment58.params=
comment58.target=boolean\ ballGetVisibility()
comment58.text=\r\n\ API\ utility\ method\r\n\ @return\ -\ true\ if\ the\ first\ ball\ in\ the\ ballSet\ is\ visible\r\n
comment59.params=whichBall
comment59.target=boolean\ ballGetVisibility(int)
comment59.text=\r\n\ API\ utility\ method\r\n\ @param\ whichBall\ -\ the\ index\ used\ to\ select\ the\ ball\ to\ use\ out\ of\ the\ ballSet\r\n\ @return\ -\ true\ if\ the\ ball\ specified\ is\ visible\r\n
comment6.params=whichBall
comment6.target=void\ ballAndWallCollisionCheck(int)
comment6.text=\r\n\ EXTENDED\ METHOD\ -\ Handle\ when\ the\ given\ ball\ hit\ the\ wall\r\n\ @param\ whichBall\ ball\ to\ check\ the\ collision\ for\r\n
comment60.params=whichBall\ whichPaddle
comment60.target=void\ ballSpawnNearPaddle(int,\ int)
comment60.text=\r\n\ API\ utility\ method\r\n\ @param\ whichBall\ -\ an\ index\ to\ select\ the\ ball\ to\ use\ out\ of\ the\ ballSet\r\n\ @param\ whichPaddle\ -\ an\ index\ to\ select\ the\ paddle\ to\ use\ out\ of\ the\ paddleSet\r\n
comment61.params=
comment61.target=void\ ballSpawnNearPaddle()
comment61.text=\r\n\ API\ utility\ method\r\n\ Spawns\ the\ first\ ball\ in\ the\ ballSet\ near\ the\ first\ paddle\ in\ the\ paddleSet\r\n
comment62.params=fileName
comment62.target=void\ paddleSetImage(java.lang.String)
comment62.text=\r\n\ API\ utility\ method\r\n\ @param\ fileName\ -\ the\ name\ of\ the\ image\ to\ set\ the\ paddle\ to,\ prefixed\ with\ "paddles/",\ as\ in\ "paddles/P2.png"\ \r\n
comment63.params=fileName\ whichPaddle
comment63.target=void\ paddleSetImage(java.lang.String,\ int)
comment63.text=\r\n\ API\ utility\ method\r\n\ @param\ fileName\ -\ the\ name\ of\ the\ image\ to\ set\ the\ paddle\ to,\ prefixed\ with\ "paddles/",\ as\ in\ "paddles/P2.png"\ \r\n\ @param\ whichPaddle\ -\ the\ index\ of\ the\ paddle\ to\ select\ out\ of\ the\ paddleSet\r\n
comment64.params=key
comment64.target=boolean\ isKeyboardButtonDown(SpaceSmasher_FunctionalAPI.KeysEnum)
comment64.text=\r\n\ API\ utility\ method\r\n\ @param\ key\ -\ the\ key\ we're\ investigating\r\n\ @return\ -\ true\ if\ the\ key\ we're\ investigating\ is\ currently\ being\ pressed\r\n
comment65.params=
comment65.target=void\ paddleMoveLeft()
comment65.text=\r\n\ API\ utility\ method\r\n
comment66.params=whichPaddle
comment66.target=void\ paddleMoveLeft(int)
comment66.text=\r\n\ API\ utility\ method\r\n\ @param\ whichPaddle\ -\ the\ index\ used\ to\ select\ the\ paddle\ to\ use\ out\ of\ the\ paddleSet\r\n
comment67.params=
comment67.target=void\ paddleMoveRight()
comment67.text=\r\n\ API\ utility\ method\r\n
comment68.params=whichPaddle
comment68.target=void\ paddleMoveRight(int)
comment68.text=\r\n\ API\ utility\ method\r\n\ @param\ whichPaddle\ -\ the\ index\ used\ to\ select\ the\ paddle\ to\ use\ out\ of\ the\ paddleSet\r\n
comment69.params=row\ col\ type
comment69.target=void\ removeNeighboringBlocks(int,\ int,\ SpaceSmasher.Block.BlockType)
comment69.text=\r\n\ API\ utility\ method\r\n\ @param\ row\ -\ the\ row\ for\ the\ target\ block\r\n\ @param\ col\ -\ the\ column\ for\ the\ target\ block\r\n\ @param\ type\ -\ the\ type\ of\ block\ that\ was\ at\ (row,\ col)\r\n
comment7.params=numOfLife
comment7.target=void\ initializeLifeSet(int)
comment7.text=\r\n\ EXTENDED\ METHOD\ -\ Set\ the\ number\ of\ lives\ for\ the\ game\r\n\ @param\ numOfLife\ the\ number\ of\ lives\r\n
comment70.params=
comment70.target=void\ handleBlockBallCollision()
comment70.text=\r\n\ API\ utility\ method\r\n\ Used\ to\ process\ all\ block\ and\ ball\ collisions\ for\ the\ first\ ball\ in\ the\ ballSet\r\n
comment71.params=whichBall\ whichPaddle
comment71.target=void\ handleBlockBallCollision(int,\ int)
comment71.text=\r\n\ API\ utility\ method\r\n\ Used\ to\ process\ all\ block\ and\ ball\ collisions\ for\ the\ specified\ ball\ and\ paddle\r\n\ The\ paddle\ here\ will\ change\ state\ if\ a\ special\ block\ was\ destroyed\r\n\ \r\n\ @param\ whichBall\ -\ an\ index\ to\ select\ the\ ball\ to\ use\ out\ of\ the\ ballSet\r\n\ @param\ whichPaddle\ -\ an\ index\ to\ select\ the\ paddle\ to\ use\ out\ of\ the\ paddleSet\r\n
comment8.params=numOfBall
comment8.target=void\ initializeBallSet(int)
comment8.text=\r\n\ EXTENDED\ METHOD\ -\ initialize\ the\ ball.\ Adding\ the\ ball\ to\ the\ ball\ set\r\n\ to\ get\ them\ ready\ to\ spawn\r\n\ @param\ numOfBall\ how\ many\ balls\ to\ initialize\r\n
comment9.params=numOfPaddle
comment9.target=void\ initializePaddleSet(int)
comment9.text=\r\n\ EXTENDED\ METHOD\ -\ Initialize\ the\ paddle\r\n\ @param\ numOfPaddle\ how\ many\ paddle\ to\ use\ in\ the\ game\r\n
numComments=72
