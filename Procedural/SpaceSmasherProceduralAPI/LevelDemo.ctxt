#BlueJ class context
comment0.params=
comment0.target=void\ buildGame()
comment1.params=
comment1.target=void\ updateGame()
comment2.params=
comment2.target=void\ clearLevel()
comment2.text=\r\n\ Set\ all\ balls\ in\ the\ game\ to\ invisible,\ to\ remove\ them\ from\ play.\r\n\ Clear\ all\ of\ the\ blocks\ in\ the\ block\ set.\r\n
comment3.params=
comment3.target=void\ initializeBlockSet()
comment3.text=\r\n\ Create\ a\ very\ simple\ level\ consisting\ of\ only\ two\ normal\ blocks.\r\n
comment4.params=columns\ rows
comment4.target=void\ initializeNextLevel(int,\ int)
comment4.text=\r\n\ Creates\ a\ simple\ level\ made\ of\ normal\ blocks,\ with\ columns\ columns,\ and\ rows\ rows.\r\n
comment5.params=whichPaddle
comment5.target=void\ useADForPaddleMovement(int)
comment5.text=\r\n\ (Override\ with\ same\ implementation\ as\ in\ API)\r\n\ Function\ for\ paddle\ movement\ control.\ \r\n\ Use\ the\ A\ and\ D\ -keys\ to\ move\ the\ given\ paddle\r\n\ @param\ whichPaddle\ do\ you\ want\ to\ use\ these\ keys\ to\ control\r\n
comment6.params=whichPaddle
comment6.target=void\ useMouseForPaddleMovement(int)
comment6.text=\r\n\ (Override\ with\ same\ implementation\ as\ in\ API)\r\n\ Function\ for\ paddle\ movement\ control\r\n\ Use\ mouse\ to\ control\ the\ movement\ of\ the\ given\ paddle\r\n\ @param\ whichPaddle\ do\ you\ want\ to\ use\ the\ mouse\ to\ control\r\n
comment7.params=whichBall\ whichPaddle
comment7.target=void\ spawnBall(int,\ int)
comment7.text=\r\n\ (Override\ with\ same\ implementation\ as\ in\ API)\r\n\ To\ spawn\ a\ ball\ from\ a\ paddle\ by\ using\ the\ SPACE\ key\ or\ the\ \r\n\ mouse\ left\ click\r\n\ @param\ whichBall\ do\ you\ want\ to\ spawn\r\n\ @param\ whichPaddle\ do\ you\ want\ to\ spawn\ the\ ball\ from\r\n
comment8.params=whichBall
comment8.target=void\ handleBlockBallWallCollision(int)
comment8.text=\r\n\ (Override\ with\ same\ implementation\ as\ in\ API)\r\n\ Handle\ when\ ball-block\ and\ ball-wall\ collision.\ This\ function\ also\r\n\ check\ the\ game\ is\ lost\ by\ checking\ if\ all\ the\ lives\ are\ used\r\n\ @param\ handle\ collision\ for\ whichBall\r\n
comment9.params=whichBall\ whichPaddle
comment9.target=void\ handlePaddleBallCollisions(int,\ int)
comment9.text=\r\n\ (Override\ with\ same\ implementation\ as\ in\ API)\r\n\ Handle\ when\ ball\ hit\ the\ paddle.\r\n\ @param\ handle\ collision\ for\ whichBall\ and\ whichPaddle\r\n
numComments=10
